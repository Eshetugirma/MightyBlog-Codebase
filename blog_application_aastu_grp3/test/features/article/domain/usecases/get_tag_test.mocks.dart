// Mocks generated by Mockito 5.4.2 from annotations
// in blog_app/test/features/article/domain/usecases/get_tag_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:blog_app/features/article/domain/entities/article.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [Article].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticle extends _i1.Mock implements _i2.Article {
  MockArticle() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: '',
      ) as String);
  @override
  String get title => (super.noSuchMethod(
        Invocation.getter(#title),
        returnValue: '',
      ) as String);
  @override
  String get subtitle => (super.noSuchMethod(
        Invocation.getter(#subtitle),
        returnValue: '',
      ) as String);
  @override
  List<String> get tags => (super.noSuchMethod(
        Invocation.getter(#tags),
        returnValue: <String>[],
      ) as List<String>);
  @override
  String get content => (super.noSuchMethod(
        Invocation.getter(#content),
        returnValue: '',
      ) as String);
  @override
  String get estimatedReadTime => (super.noSuchMethod(
        Invocation.getter(#estimatedReadTime),
        returnValue: '',
      ) as String);
  @override
  String get photoUrl => (super.noSuchMethod(
        Invocation.getter(#photoUrl),
        returnValue: '',
      ) as String);
  @override
  List<Object?> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object?>[],
      ) as List<Object?>);
}
